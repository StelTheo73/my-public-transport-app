@import url("https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css");
@import url('https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=Roboto&display=swap');

:root {
    --default-box-shadow: 1px 4px 10px 1px var(--bs-gray-dark);
    --header-height: 60px;
    --max-body-width: 1200px;
    --confirmation-color: rgb(144, 238, 144)
}

* {
    font-family: 'Poppins', sans-serif;
    font-size: medium;
    -webkit-overflow-scrolling: touch;
}

body {
    max-width: var(--max-body-width);
    margin: 0 auto;
    margin-top: 1em;
    margin-bottom: 0.1em;
    box-shadow: var(--default-box-shadow);
    border-radius: 1em;
}

body::before {
    content: "";
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: url("assets/images/logo.png");
    background-repeat: no-repeat;
    background-position: center;
    filter: grayscale(100%);
    z-index: -1;
    background-color: white;
}

main {
    padding-left: 2em;
    padding-right: 2em;
    padding-top: var(--header-height);
    width: 100%;
    /* TODO(theofilo): Define minimum height */
    min-height: 90vh;
    z-index: 0;
    background-color: white;
    opacity: 0.95;
}

.hide {
    display: none;
    visibility: hidden;
}

@media screen and (max-width: 360px) {
    main .hide-360 {
        display: none;
        visibility: hidden;
    }
}

.hide-360 {
    display: flex;
    visibility: visible;
}

.main-wrapper {
    width: 100%;
}

@media only screen and (max-width: 576px) {
    main .full-width-xs {
        width: 100%;
    }
}

.rotate-transition {
    transition: transform 0.5s;
}

.rotate {
    transform: rotate(-180deg);
    transition: transform 0.5s;
}

.sticky-container {
    position: -webkit-sticky;
    position: sticky;
    top: calc(var(--header-height));
    background-color: white;
    padding-top: 1em;
    padding-bottom: 0.2em;
    border-radius: 1em;
    z-index: 1;
}

.sticky-container button {
    box-shadow: var(--default-box-shadow);
}

.width-90 {
    width: 90%;
}

/* Add red asterisk after labels with .required */
label.required::after {
    content: " *";
    color: red;
}

label {
    user-select: none;
}

/* Make form element appear like react-select component on focus */
main .form-control:focus,
main .form-select:focus
{
    border: 2px solid var(--bs-primary);
    box-shadow: none;
}

.default-shadow {
    box-shadow:  var(--default-box-shadow);
}

.help-button:hover {
    box-shadow: var(--default-box-shadow);
    cursor: pointer;
}

.text-primary-bold {
    font-weight: bold;
    color: var(--bs-primary);
}

.text-warning-bold {
    font-weight: bold;
    color: var(--bs-warning);
}

.user-select-disabled {
    user-select: none;
}

.is-valid {
    border: 2px solid var(--bs-success);
    border-radius: 0.5em;
}

.is-invalid {
    border-radius: 0.5em;
    border: 2px solid var(--bs-danger);
}
